3 Sum problem:

https://www.codingninjas.com/studio/problems/three-sum_6922132

Solution:

#include<bits/stdc++.h>
vector<vector<int>> triplet(int n, vector<int> &arr)
{
    vector<vector<int>> ans;
    sort(arr.begin(),arr.end());
    for(int i=0 ; i<n ; i++){
        if(i>0 && arr[i] == arr[i-1]) continue;
        int j = i+1;
        int k = n-1;
        while(j<k){
           int sum = arr[i]+arr[j]+arr[k];
           if(sum>0){
               k--;
           }
           else if(sum<0){
               j++;
           }
           else{
               vector<int> temp = {arr[i],arr[j],arr[k]};
               ans.push_back(temp);
               j++;
               k--;
               while(j<k && arr[j] == arr[j-1]) j++;
               while(j<k && arr[k] == arr[k+1]) k--;
           }
        }
    }
    return ans;
}
==============================================================================================================================================================================

Majority Element (n/3):

https://www.codingninjas.com/studio/problems/majority-element_6915220

Solution:

vector<int> majorityElement(vector<int> v) {
	
	int n = v.size();
	int mj = n/3;
	if(n==1){
		return v;
	}
	map<int,int> mpp;
	for(int i=0;i<n;i++){
		mpp[v[i]]++;
	}
	vector<int> ans;
	for(auto it:mpp){
		if(it.second>mj){
			ans.push_back(it.first);
		}
	}
	return ans;
}

===========================================================================================================================================================================
