Anagram Pair:

https://www.codingninjas.com/studio/problems/anagram-pairs_626517

Solution:
#include<bits/stdc++.h>
bool isAnagram(string str1, string str2)
{
    int len1 = str1.size();
    int len2 = str2.size();

    if(len1!=len2){
        return false;
    }

    unordered_map<char, int> mp1;
    unordered_map<char, int> mp2;
    for(int i=0;i<len1;i++){
        mp1[str1[i]]++;
    }

    
    for(int i=0;i<len2;i++){
        mp2[str2[i]]++;
    }

    if(mp1==mp2){
        return true;
    }else{
        return false;
    }
}

==========================================================================================================================================================================
Isomorphic Strings:

https://www.codingninjas.com/studio/problems/isomorphic-strings-_1117636

Solution:
bool areIsomorphic(string &str1, string &str2)

{


    if (str1.size() != str2.size()) return 0;

    int fr1[26] = {0,};

    int fr2[26] = {0,};

    for (int i=0; i<str1.size(); i++){

        int t = str2[i]-'a', tt = str1[i]-'a';

        if (fr1[t] == 0) fr1[t] = tt;

        else if (fr1[t] != tt)   return 0;

        if (fr2[tt] == 0) fr2[tt] = t;

        else if (fr2[tt] != t)   return 0;  

    }

    return 1;

}

